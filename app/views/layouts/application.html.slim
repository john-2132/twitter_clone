doctype html
html.h-100
  head
    meta content="text/html; charset=UTF-8" http-equiv="Content-Type"
    title Myapp
    meta content="width=device-width,initial-scale=1" name="viewport"
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag "application", "data-turbo-track": "reload"
    = javascript_include_tag "application", "data-turbo-track": "reload", defer: true
  body.h-100.overscroll-none
    div class="#{user_signed_in? ? 'bg-black border-dark' : 'bg-dark border-secondary'} row gx-0 h-header position-fixed w-100 top-0 z-4" id="header"
      div.col-35.text-white.rounded-0.my-auto
        h3 class="mb-0 d-flex align-items-center ms-9"
          = link_to tweets_path, class: "text-decoration-none text-white"
            i class="bi bi-twitter"
              span.ms-2.fst-normal Twitter
      div.col-45.border.border-dark.text-white.border-top-0
      div.col-4.text-white.my-auto
        div.float-end
          = link_to "ログイン", new_user_session_path, class: 'btn btn-outline-primary me-3'
          = link_to "新規登録", new_user_registration_path, class: 'btn btn-primary me-9'
    = yield
    #toast-container(data-controller="toast" class="position-fixed top-header-bottom end-0")
      - flash.each do |type, message|
        .mb-2.toast(class="toast" role="alert" aria-live="assertive" aria-atomic="true")
          .toast-header class="text-#{type == 'notice' ? 'bg-success' : 'bg-danger'}"
            strong.me-auto
              = type.to_s.capitalize
            button.btn-close(data-bs-dismiss="toast")
          .toast-body
            = message
      - if defined?(resource)
        - if resource.errors.any?
          .mb-2.toast(class="toast" role="alert" aria-live="assertive" aria-atomic="true")
            .toast-header
              strong.me-auto
                = I18n.t("errors.messages.not_saved",
                  count: resource.errors.count,
                  resource: resource.class.model_name.human.downcase)
              button.btn-close(data-bs-dismiss="toast")
            .toast-body
              ul
                - resource.errors.full_messages.each do |message|
                  li= message


  
